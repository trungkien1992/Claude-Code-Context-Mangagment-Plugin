# Enhanced EAEPT Workflow Configuration
# Revolutionary Express-Ask-Explore-Plan-Code-Test methodology with auto-orchestration

# Global workflow settings
workflow:
  auto_orchestration_enabled: true
  context_preservation_priority: high
  rag_integration_enabled: true
  performance_monitoring: true
  project_detection: true

# Phase-specific configurations
phases:
  express:
    name: "Express - Deep Analysis"
    description: "Deep task analysis and context framing with intelligent perspective"
    auto_transition_threshold: 0.85
    context_optimization_strategy: "preserve_thinking"
    max_duration_minutes: 15
    token_threshold: 0.6
    focus_areas:
      - "Task complexity analysis"
      - "Requirements identification"
      - "Success criteria definition"
      - "Risk assessment"
    
  ask:
    name: "Ask - Interactive Clarification"
    description: "Intelligent questioning with context awareness"
    auto_transition_threshold: 0.9
    context_optimization_strategy: "preserve_dialogue"
    max_duration_minutes: 10
    token_threshold: 0.5
    focus_areas:
      - "Requirement clarification"
      - "Constraint identification"
      - "Priority confirmation"
      - "Integration requirements"
    
  explore:
    name: "Explore - RAG-Powered Research"
    description: "Comprehensive research using knowledge base integration"
    auto_transition_threshold: 0.8
    context_optimization_strategy: "preserve_research"
    rag_integration: true
    parallel_execution: true
    max_duration_minutes: 30
    token_threshold: 0.85
    rag_queries:
      - "Development patterns for {task}"
      - "Implementation guide for {feature}"
      - "Testing strategies for {component}"
      - "Performance optimization for {technology}"
      - "Integration patterns for {system}"
    focus_areas:
      - "Existing patterns and conventions"
      - "Architecture principles"
      - "Integration points"
      - "Performance considerations"
    
  plan:
    name: "Plan - Implementation Strategy"
    description: "Detailed planning with architecture alignment"
    auto_transition_threshold: 0.85
    context_optimization_strategy: "preserve_architecture"
    max_duration_minutes: 20
    token_threshold: 0.7
    planning_framework:
      - "Component analysis and design"
      - "Integration strategy"
      - "Performance optimization approach"
      - "Testing and validation strategy"
      - "Deployment and monitoring plan"
    focus_areas:
      - "Component composition patterns"
      - "State management integration"
      - "Service layer alignment"
      - "Integration points"
      - "Consistency maintenance"
    
  code:
    name: "Code - Implementation"
    description: "Systematic implementation with real-time monitoring"
    auto_transition_threshold: 0.8
    context_optimization_strategy: "preserve_code"
    parallel_execution: true
    max_duration_minutes: 60
    token_threshold: 0.9
    monitoring_frequency: 300  # seconds
    quality_gates:
      - "Code style consistency"
      - "Architecture integration"
      - "Performance optimization"
      - "Error handling robustness"
      - "Documentation completeness"
    focus_areas:
      - "Best practices adherence"
      - "Clean architecture"
      - "Security considerations"
      - "Performance targets"
      - "Real-time integration"
    
  test:
    name: "Test - Validation & QA"
    description: "Comprehensive testing with quality standards"
    auto_transition_threshold: 0.9
    context_optimization_strategy: "preserve_tests"
    parallel_execution: true
    max_duration_minutes: 30
    token_threshold: 0.8
    test_categories:
      - "Unit testing (target: 90%+ coverage)"
      - "Integration testing (cross-system)"
      - "Performance testing (targets)"
      - "User experience testing"
      - "Security testing"
    focus_areas:
      - "Component testing"
      - "API endpoint testing"
      - "Contract testing"
      - "Performance validation"
      - "System accuracy"

# Context management settings
context_management:
  token_limits:
    warning_threshold: 160000
    optimization_threshold: 180000
    emergency_threshold: 195000
  
  optimization_strategies:
    preserve_thinking: "Maintain conceptual analysis and insights"
    preserve_dialogue: "Keep user interactions and clarifications"
    preserve_research: "Maintain RAG results and findings"
    preserve_architecture: "Keep design decisions and plans"
    preserve_code: "Maintain implementation and code blocks"
    preserve_tests: "Keep test results and validation data"
  
  auto_actions:
    compact_triggers:
      - "High repetitive patterns (>5)"
      - "Token usage >75% with low complexity"
      - "Message count >30 with single topic"
    
    digest_triggers:
      - "Phase completion with high confidence"
      - "Long session duration (>45 minutes)"
      - "High task completion count (>3)"
    
    hybrid_triggers:
      - "Complex session with high token usage"
      - "Multiple topic changes with implementation"

# RAG system integration
rag_system:
  url: "http://localhost:8000"
  collection: "knowledge_base"
  search_parameters:
    max_results: 3
    min_similarity: 0.25
    timeout: 10
  
  query_templates:
    development_pattern: "Development {component} patterns for {task}"
    implementation_guide: "{technology} implementation guide for {feature}"
    testing_strategy: "Testing approach for {component}"
    performance_optimization: "Performance optimization for {technology} in {context}"
    integration_pattern: "{source} to {target} integration patterns"

# Quick-start templates
quick_templates:
  ui_component:
    name: "UI Component Implementation"
    description: "Create new user interface component"
    technologies: ["React", "Vue", "Flutter", "Angular"]
    focus: "Component architecture and styling"
    
  api_endpoint:
    name: "API Endpoint Development"
    description: "Implement new backend API endpoint"
    technologies: ["FastAPI", "Express", "Django", "Spring"]
    focus: "REST API design and database integration"
    
  mobile_feature:
    name: "Mobile Feature Implementation"
    description: "Add new mobile application feature"
    technologies: ["Flutter", "React Native", "Swift", "Kotlin"]
    focus: "Mobile-first design and performance"
    
  smart_contract:
    name: "Smart Contract Development"
    description: "Create blockchain smart contract"
    technologies: ["Solidity", "Cairo", "Rust", "Move"]
    focus: "Security and gas optimization"
    
  performance_optimization:
    name: "Performance Optimization"
    description: "Optimize application performance"
    technologies: ["Profiling", "Caching", "Database", "Frontend"]
    focus: "Bottleneck identification and optimization"

# Project detection patterns
project_detection:
  enabled: true
  patterns:
    react:
      files: ["package.json", "src/App.js", "public/index.html"]
      framework: "React"
      language: "JavaScript/TypeScript"
      
    flutter:
      files: ["pubspec.yaml", "lib/main.dart", "android/", "ios/"]
      framework: "Flutter"
      language: "Dart"
      
    fastapi:
      files: ["main.py", "requirements.txt", "app/"]
      framework: "FastAPI"
      language: "Python"
      
    django:
      files: ["manage.py", "requirements.txt", "settings.py"]
      framework: "Django"
      language: "Python"
      
    cairo:
      files: ["Scarb.toml", "src/lib.cairo"]
      framework: "Cairo"
      language: "Cairo"

# Monitoring and metrics
monitoring:
  enabled: true
  metrics_collection: true
  performance_tracking: true
  context_analytics: true
  
  alerts:
    high_token_usage: true
    long_phase_duration: true
    low_confidence_scores: true
    context_optimization_needed: true

# Learning and adaptation
learning:
  pattern_recognition: true
  user_preference_learning: true
  workflow_optimization: true
  performance_improvement: true
  
  adaptation_areas:
    - "Phase duration preferences"
    - "Context management style"
    - "Technology focus areas"
    - "Quality criteria priorities"
    - "Collaboration patterns"